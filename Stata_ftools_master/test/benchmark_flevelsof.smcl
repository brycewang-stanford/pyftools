{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}collapse
       {txt}log:  {res}C:\Git\ftools\test\benchmark_flevelsof.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}26 Oct 2017, 09:40:03
{txt}
{com}. 
. loc sizes 1000000 20000000
{txt}
{com}. 
. foreach size of local sizes {c -(}
{txt}  2{com}.         clear
{txt}  3{com}.         set obs `size'
{txt}  4{com}.         gen byte id1 = int(runiform()*10)
{txt}  5{com}.         gen long id2 = int(runiform()*100) * 10
{txt}  6{com}. 
.         timer on 11
{txt}  7{com}.         levelsof id1, loc(x)
{txt}  8{com}.         timer off 11
{txt}  9{com}. 
.         timer on 12
{txt} 10{com}.         flevelsof id1, loc(x)
{txt} 11{com}.         timer off 12
{txt} 12{com}. 
.         timer on 13
{txt} 13{com}.         glevelsof id1, loc(x) benchmark
{txt} 14{com}.         timer off 13
{txt} 15{com}.         
.         timer on 21
{txt} 16{com}.         levelsof id2, loc(x)
{txt} 17{com}.         timer off 21
{txt} 18{com}. 
.         timer on 22
{txt} 19{com}.         flevelsof id2, loc(x)
{txt} 20{com}.         timer off 22
{txt} 21{com}. 
.         timer on 23
{txt} 22{com}.         glevelsof id2, loc(x) benchmark
{txt} 23{com}.         timer off 23
{txt} 24{com}. 
.         di as text "Sample size: `size'"
{txt} 25{com}.         di as text "11 12 13: small id - 21 22 23 large id"
{txt} 26{com}.         timer list
{txt} 27{com}.         timer clear
{txt} 28{com}. {c )-}
{txt}{p}
number of observations (_N)  was 0,
now 1,000,000
{p_end}
0 1 2 3 4 5 6 7 8 9
{res}{txt}0 1 2 3 4 5 6 7 8 9
{res}Parsed by variables; .003 seconds
{txt}	Plugin step 1: stata parsing done; 0.001 seconds.
	Plugin step 2: Read in by variables; 0.020 seconds.
	Plugin step 3.1: Determined hashing strategy; 0.007 seconds.
	Plugin step 3.2: Bijected integers to natural numbers; 0.005 seconds.
	Plugin step 3.3: Sorted integer-only hash; 0.016 seconds.
	Plugin step 3.4: Parsed hash groups; 0.005 seconds.
	Plugin step 4.1: Keep only one row per group; 0.000 seconds.
	Plugin step 4.2: Sorted groups in memory; 0.000 seconds.
	Plugin step 5: Wrote levels to Stata macro; 0.000 seconds.
Plugin runtime; .062 seconds
Total runtime; .067 seconds
0 1 2 3 4 5 6 7 8 9
0 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250 260 270 280 290 300 310 320 330 340 350 360 370 380 390 400 410 420 430 440 450 460 470 480 490 500 510 520 530 540 550 560 570 580 590 600 610 620 630 640 650 660 670 680 690 700 710 720 730 740 750 760 770 780 790 800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990
{res}{txt}0 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250 260 270 280 290 300 310 320 330 340 350 360 370 380 390 400 410 420 430 440 450 460 470 480 490 500 510 520 530 540 550 560 570 580 590 600 610 620 630 640 650 660 670 680 690 700 710 720 730 740 750 760 770 780 790 800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990
{res}Parsed by variables; .003 seconds
{txt}	Plugin step 1: stata parsing done; 0.000 seconds.
	Plugin step 2: Read in by variables; 0.027 seconds.
	Plugin step 3.1: Determined hashing strategy; 0.010 seconds.
	Plugin step 3.2: Bijected integers to natural numbers; 0.007 seconds.
	Plugin step 3.3: Sorted integer-only hash; 0.018 seconds.
	Plugin step 3.4: Parsed hash groups; 0.005 seconds.
	Plugin step 4.1: Keep only one row per group; 0.000 seconds.
	Plugin step 4.2: Sorted groups in memory; 0.000 seconds.
	Plugin step 5: Wrote levels to Stata macro; 0.000 seconds.
Plugin runtime; .075 seconds
Total runtime; .081 seconds
0 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250 260 270 280 290 300 310 320 330 340 350 360 370 380 390 400 410 420 430 440 450 460 470 480 490 500 510 520 530 540 550 560 570 580 590 600 610 620 630 640 650 660 670 680 690 700 710 720 730 740 750 760 770 780 790 800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990
Sample size: 1000000
11 12 13: small id - 21 22 23 large id
{res}  11:      0.17 /        1 =       0.1690
  12:      0.21 /        1 =       0.2120
  13:      0.07 /        1 =       0.0740
  21:      0.55 /        1 =       0.5510
  22:      0.09 /        1 =       0.0940
  23:      0.08 /        1 =       0.0820
{txt}{p}
number of observations (_N)  was 0,
now 20,000,000
{p_end}
0 1 2 3 4 5 6 7 8 9
{res}{txt}0 1 2 3 4 5 6 7 8 9
{res}Parsed by variables; .003 seconds
{txt}	Plugin step 1: stata parsing done; 0.000 seconds.
	Plugin step 2: Read in by variables; 0.362 seconds.
	Plugin step 3.1: Determined hashing strategy; 0.139 seconds.
	Plugin step 3.2: Bijected integers to natural numbers; 0.095 seconds.
	Plugin step 3.3: Sorted integer-only hash; 0.254 seconds.
	Plugin step 3.4: Parsed hash groups; 0.096 seconds.
	Plugin step 4.1: Keep only one row per group; 0.000 seconds.
	Plugin step 4.2: Sorted groups in memory; 0.000 seconds.
	Plugin step 5: Wrote levels to Stata macro; 0.000 seconds.
Plugin runtime; .99 seconds
Total runtime; .994 seconds
0 1 2 3 4 5 6 7 8 9
0 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250 260 270 280 290 300 310 320 330 340 350 360 370 380 390 400 410 420 430 440 450 460 470 480 490 500 510 520 530 540 550 560 570 580 590 600 610 620 630 640 650 660 670 680 690 700 710 720 730 740 750 760 770 780 790 800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990
{res}{txt}0 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250 260 270 280 290 300 310 320 330 340 350 360 370 380 390 400 410 420 430 440 450 460 470 480 490 500 510 520 530 540 550 560 570 580 590 600 610 620 630 640 650 660 670 680 690 700 710 720 730 740 750 760 770 780 790 800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990
{res}Parsed by variables; .003 seconds
{txt}	Plugin step 1: stata parsing done; 0.000 seconds.
	Plugin step 2: Read in by variables; 0.355 seconds.
	Plugin step 3.1: Determined hashing strategy; 0.125 seconds.
	Plugin step 3.2: Bijected integers to natural numbers; 0.110 seconds.
	Plugin step 3.3: Sorted integer-only hash; 0.283 seconds.
	Plugin step 3.4: Parsed hash groups; 0.099 seconds.
	Plugin step 4.1: Keep only one row per group; 0.000 seconds.
	Plugin step 4.2: Sorted groups in memory; 0.000 seconds.
	Plugin step 5: Wrote levels to Stata macro; 0.000 seconds.
Plugin runtime; 1.017 seconds
Total runtime; 1.021 seconds
0 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250 260 270 280 290 300 310 320 330 340 350 360 370 380 390 400 410 420 430 440 450 460 470 480 490 500 510 520 530 540 550 560 570 580 590 600 610 620 630 640 650 660 670 680 690 700 710 720 730 740 750 760 770 780 790 800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990
Sample size: 20000000
11 12 13: small id - 21 22 23 large id
{res}  11:      4.06 /        1 =       4.0630
  12:      1.31 /        1 =       1.3110
  13:      1.00 /        1 =       0.9950
  21:      9.18 /        1 =       9.1830
  22:      1.32 /        1 =       1.3240
  23:      1.02 /        1 =       1.0230
{txt}
{com}. 
. log close _all
      {txt}name:  {res}collapse
       {txt}log:  {res}C:\Git\ftools\test\benchmark_flevelsof.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}26 Oct 2017, 09:40:25
{txt}{.-}
{smcl}
{txt}{sf}{ul off}